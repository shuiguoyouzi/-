<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
		<!-- 1.开启注解/注解驱动 -->
	<mvc:annotation-driven />
<!-- 	<mvc:resources mapping="/resources/*" location="/resources/"/> -->
	
	
	<!-- 2.自动注解扫描包 -->
	<context:component-scan base-package="pro.yf.bj" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>	 
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	
	
	<!-- 3.定义跳转的文件的前后缀 ，视图模式配置-->
	<bean id="viewResolver"   class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	<!-- 4.注册freemarker配置类 -->
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- ftl模版文件路径  -->
		<property name="templateLoaderPath" value="/WEB-INF/ftls/manager/"></property>
		
		<!-- 页面编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerSettings">
			<props>
				<!-- 模版缓存刷新时间，不写单位默认为秒 -->
				<prop key="template_update_delay">2</prop>
				<!-- 时区 和 时间格式化 -->
				<prop key="locale">zh_CN</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<!-- 数字使用.来分隔 -->
				<prop key="number_format">#.##</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 5.注册freemarker视图解析器 -->
	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!-- 视图解析顺序，排在其他视图解析器之后 数字越大优先级越低
		     ps:但是吧我不建议使用视图解析器的优先级，因为这个优先级不是绝对的
		               而且如果我们执行queryFk()方法的返回值和queryUser()的返回值一样也
		               不利于项目后期的阅读和维护，我的建议是写不一样的返回值
		
		 -->
		<property name="order" value="0" />
        <!-- 开启模版缓存 -->
		<property name="cache" value="true" />
		<!-- 上面路径已经配了，这里就不用配啦 -->
		<property name="prefix" value="" />
		<!-- 配置文件后缀 -->
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
    <!-- 是否允许session属性覆盖模型数据,默认false -->
		<property name="allowSessionOverride" value="false" />
    <!-- 是否允许request属性覆盖模型数据,默认false -->
		<property name="allowRequestOverride" value="false" />
    <!-- 开启spring提供的宏帮助(macro) -->
		<property name="exposeSpringMacroHelpers" value="true" />
    <!-- 添加request attributes属性到ModelAndView中 -->
		<property name="exposeRequestAttributes" value="true" />
    <!-- 添加session attributes属性到ModelAndView中 -->
		<property name="exposeSessionAttributes" value="true" />
	</bean>
	
	
		<!--6.使用SpringMvc自带的异常处理类：SimpleMappingExceptionResolver  
<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
     <!-- 5.1定义默认的异常处理页面:只要程序中有异常就转向到error.jsp 
    <property name="defaultErrorView" value="error"/>-->
    <!-- 5.2定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception
            PS：我们还想在异常处理页面上获取到异常的详细信息
                exmsg：异常信息的形参名，在异常处理页面上可以通过EL表达式获取到具体的异常信息
   
    <property name="exceptionAttribute" value="exmsg"/>   -->
    <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常页文件名作为值，
　　　　将不同的异常映射到不同的页面上，即特事特办
    <property name="exceptionMappings">
        <props>
                  <prop key="java.lang.NullPointerException">error2</prop> -->
                  <!--这里还可以继续扩展对不同异常类型的处理  
        </props>
    </property>
</bean>-->
	
	<!-- 7.SpringMVC上传文件时，需要配置CommonsMultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小不能超过5M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <!-- <property name="maxUploadSize" value="-1" /> -->
	    <property name="maxUploadSize" value="5242880"></property>
    </bean>
    
	
	
	</beans>
